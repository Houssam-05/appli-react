{"ast":null,"code":"export default class PokemonService {\n  static getPokemons() {\n    return fetch('http://localhost:3001/pokemons').then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`); // Vérifie si la réponse est réussie\n      }\n      return response.json(); // Convertit la réponse en JSON si tout va bien\n    }).catch(this.handleError); // Gère les erreurs ici\n  }\n  static getPokemon(id) {\n    return fetch(`http://localhost:3001/pokemons/${id}`).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`); // Vérifie si la réponse est réussie\n      }\n      return response.json(); // Convertit la réponse en JSON si tout va bien\n    }).then(data => this.isEmpty(data) ? null : data).catch(this.handleError); // Gère les erreurs ici\n  }\n  static isEmpty(data) {\n    return Object.keys(data).length === 0; // Vérifie si l'objet est vide\n  }\n  static handleError(error) {\n    console.error(\"Error fetching data:\", error); // Affiche l'erreur dans la console\n  }\n}","map":{"version":3,"names":["PokemonService","getPokemons","fetch","then","response","ok","Error","status","json","catch","handleError","getPokemon","id","data","isEmpty","Object","keys","length","error","console"],"sources":["C:/Users/Asus/Desktop/app-react/src/services/pokemon-service.ts"],"sourcesContent":["import Pokemon from \"../models/pokemon\";\r\n\r\nexport default class PokemonService {\r\n\r\n  static getPokemons(): Promise<Pokemon[]> {\r\n    return fetch('http://localhost:3001/pokemons')\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! Status: ${response.status}`); // Vérifie si la réponse est réussie\r\n        }\r\n        return response.json(); // Convertit la réponse en JSON si tout va bien\r\n      })\r\n      .catch(this.handleError); // Gère les erreurs ici\r\n  }\r\n\r\n  static getPokemon(id: number): Promise<Pokemon | null> {\r\n    return fetch(`http://localhost:3001/pokemons/${id}`)\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! Status: ${response.status}`); // Vérifie si la réponse est réussie\r\n        }\r\n        return response.json(); // Convertit la réponse en JSON si tout va bien\r\n      })\r\n      .then(data => this.isEmpty(data) ? null : data)\r\n      .catch(this.handleError); // Gère les erreurs ici\r\n  }\r\n\r\n  static isEmpty(data: object): boolean {\r\n    return Object.keys(data).length === 0; // Vérifie si l'objet est vide\r\n  }\r\n\r\n  static handleError(error: Error): void {\r\n    console.error(\"Error fetching data:\", error); // Affiche l'erreur dans la console\r\n  }\r\n}\r\n"],"mappings":"AAEA,eAAe,MAAMA,cAAc,CAAC;EAElC,OAAOC,WAAWA,CAAA,EAAuB;IACvC,OAAOC,KAAK,CAAC,gCAAgC,CAAC,CAC3CC,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBF,QAAQ,CAACG,MAAM,EAAE,CAAC,CAAC,CAAC;MAC7D;MACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDC,KAAK,CAAC,IAAI,CAACC,WAAW,CAAC,CAAC,CAAC;EAC9B;EAEA,OAAOC,UAAUA,CAACC,EAAU,EAA2B;IACrD,OAAOV,KAAK,CAAC,kCAAkCU,EAAE,EAAE,CAAC,CACjDT,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBF,QAAQ,CAACG,MAAM,EAAE,CAAC,CAAC,CAAC;MAC7D;MACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDL,IAAI,CAACU,IAAI,IAAI,IAAI,CAACC,OAAO,CAACD,IAAI,CAAC,GAAG,IAAI,GAAGA,IAAI,CAAC,CAC9CJ,KAAK,CAAC,IAAI,CAACC,WAAW,CAAC,CAAC,CAAC;EAC9B;EAEA,OAAOI,OAAOA,CAACD,IAAY,EAAW;IACpC,OAAOE,MAAM,CAACC,IAAI,CAACH,IAAI,CAAC,CAACI,MAAM,KAAK,CAAC,CAAC,CAAC;EACzC;EAEA,OAAOP,WAAWA,CAACQ,KAAY,EAAQ;IACrCC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC,CAAC;EAChD;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}